language: python

python:
  - 2.7
  - 3.3

env:
  matrix:
  - DJANGO_VERSION=1.4.10 DATABASE=sqlite
  - DJANGO_VERSION=1.5.5 DATABASE=postgres
  - DJANGO_VERSION=1.5.5 DATABASE=sqlite
  - DJANGO_VERSION=1.6 DATABASE=postgres
  - DJANGO_VERSION=1.6 DATABASE=sqlite

matrix:
  exclude:
    - python: 3.3
      env: DJANGO_VERSION=1.4.10 DATABASE=sqlite
    - python: 3.3
      env: DJANGO_VERSION=1.5.5 DATABASE=sqlite
    - python: 3.3
      env: DJANGO_VERSION=1.5.5 DATABASE=postgres
    - python: 3.3
      env: DJANGO_VERSION=1.6 DATABASE=sqlite

before_install:
  - sudo apt-get update

install:
   # GeoDjango dependencies
 - sudo apt-get install -y python-software-properties
 - sudo apt-add-repository -y ppa:ubuntugis/ppa
 - sudo apt-get update > /dev/null
 - sudo apt-get install -y libgdal-dev libproj-dev libgeos-dev libspatialite-dev
 - if [[ $DATABASE == sqlite ]]; then pip
   install git+git://github.com/tinio/pysqlite.git@extension-enabled#egg=pysqlite; fi
 - if [[ $DATABASE == postgres ]]; then pip install psycopg2; fi

   # This is a dependency of our Django test script
 - pip install argparse --use-mirrors

 - pip install -q Django==$DJANGO_VERSION --use-mirrors

 - pip install coverage

 - pip install flake8 --use-mirrors

 - python setup.py develop
 - npm install leaflet/tests/

before_script:
 - flake8 --ignore=E501 leaflet
 - if [[ $DATABASE == postgres ]]; then psql -c 'create database test_db;' -U postgres; fi
 - if [[ $DATABASE == postgres ]]; then psql -c 'CREATE EXTENSION postgis;' -U postgres -d test_db; fi
 - if [[ $DATABASE == postgres ]]; then psql -c 'CREATE EXTENSION postgis_topology;' -U postgres -d test_db; fi

script:
 - python quicktest.py leaflet --db=$DATABASE
 - node node_modules/django-leaflet-tests/node_modules/mocha-phantomjs/bin/mocha-phantomjs leaflet/tests/index.html

after_success:
 - coverage run quicktest.py leaflet --db=$DATABASE
 - pip install coveralls
 - coveralls
